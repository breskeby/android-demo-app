apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    defaultConfig {
        applicationId "org.acme.demo.demoicnndbclient"
        minSdkVersion 19
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }

    applicationVariants.all { variant ->
        def checkstyleTask = task("${variant.name}Checkstyle", type: Checkstyle) {
            source variant.javaCompile.getSource()
            include '**/*.java'
            exclude '**/gen/**'
            exclude '**/R.java'
            exclude '**/BuildConfig.java'

            def configProps = ['proj.module.dir': projectDir.absolutePath]
            configProperties configProps

            // empty classpath
            classpath = files()
        }
        check.dependsOn checkstyleTask

    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix  = ".debug"
        }
    }


    productFlavors {
        free {
        }

        pro {
        }
    }
}

checkstyle{
    configFile = rootProject.file("gradle/checkstyle/checkstyle.xml")
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.springsource.org/release'
    }
}

dependencies {
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.google.code.gson:gson:2.2.2'
    //compile files('libs/android-support-v4.jar')
}
